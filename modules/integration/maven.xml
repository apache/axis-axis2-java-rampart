<?xml version="1.0" encoding="UTF-8"?>

<!-- $Revision: 1.21 $ $Date: 2004-10-27 20:54:09 +0600 (Wed, 27 Oct 2004) $ -->

<project default="jar"
         xmlns:j="jelly:core"
         xmlns:u="jelly:util"
         xmlns:maven="jelly:maven"	
         xmlns:deploy="deploy"
         xmlns:ant="jelly:ant">
    <j:set var="samples.dir" value="target/samples"/>

    <postGoal name="itest:compile">
        <mkdir dir="target/itest-classes/modules"/>
        <copy file="../addressing/target/addressing-${addressing_version}.mar"
              tofile="target/itest-classes/modules/addressing-${addressing_version}.mar"/>
    </postGoal>

    <preGoal name="test:compile">

		<!-- Set a property that can be picked up from the ant build.xml's -->
		<ant:property name="maven.class.path" refid="maven.dependency.classpath"/>

		<!-- copy the mars so that they are available on the test classpath -->
		<copy file="../addressing/target/addressing-${addressing_version}.mar"
			  tofile="target/test-classes/modules/addressing-${addressing_version}.mar"/>
		<copy file="../security/target/rampart-${rampart_module_version}.mar"
			  tofile="target/test-classes/modules/rampart-${rampart_module_version}.mar"/>

		
		<j:set var="axis2.home" value="${basedir}/target"/>
		<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
			<classpath refid="maven.dependency.classpath"/>
			<arg line="-d xmlbeans -p samples.wsdl.perf -o target/perf -s -t -ss -sd -g -uri test/samples/wsdl/perf/perf.wsdl"/>
		</java>
		<ant:copy overwrite="yes" todir="target/perf/src/samples/wsdl/perf">
			<ant:fileset dir="test/samples/wsdl/perf">
				<ant:include name="*Skeleton.java"/>
			</ant:fileset>
		</ant:copy>
		<ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/perf"
				 target="make.repo"/>
		<ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/perf"
				 target="jar.client"/>
		 <ant:move file="target/perf/build/lib/PerfPortType-test-client.jar" 
			  tofile="target/perf/build/lib/PerfSoapService-test-client.jar" />
			  
		  <ant:move file="target/perf/build/lib/PerfPortType.aar" 
			  tofile="target/perf/build/lib/PerfSoapService.aar" />
			  
		 <ant:path id="samples.wsdl.perf.client.jar"
				  location="target/perf/build/lib/PerfSoapService-test-client.jar"/>
		
		<maven:addPath id="maven.dependency.classpath" refid="samples.wsdl.perf.client.jar"/>
		<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
			<classpath refid="maven.dependency.classpath"/>
			<arg line="-d adb -p samples.wsdl.perf2 -o target/perf2 -s -t -ss -sd -g -uri test/samples/wsdl/perf2/perf.wsdl"/>
		</java>
		<ant:copy overwrite="yes" todir="target/perf2/src/samples/wsdl/perf2">
			<ant:fileset dir="test/samples/wsdl/perf2">
				<ant:include name="*Skeleton.java"/>
			</ant:fileset>
		</ant:copy>
		<ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/perf2"
				 target="make.repo"/>
		<ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/perf2"
				 target="jar.client"/>
		<ant:move file="target/perf2/build/lib/PerfPortType-test-client.jar" 
				tofile="target/perf2/build/lib/PerfSoapService2-test-client.jar" />
		<ant:path id="samples.wsdl.perf2.client.jar"
				  location="target/perf2/build/lib/PerfSoapService2-test-client.jar"/>
		<maven:addPath id="maven.dependency.classpath" refid="samples.wsdl.perf2.client.jar"/>

		<!-- compile the schema for XMLbeans -->
		<java classname="org.apache.xmlbeans.impl.tool.SchemaCompiler" fork="true">
			<classpath refid="maven.dependency.classpath"/>
			<arg line="-src target/xmlbeans-src -d target/classes test-resources/xsd/type-test.xsd"/>
		</java>
	  
		<j:if test="${context.getVariable('skip.enterprise.tests') != 'true'}">	
		  <ant:echo>Running codegen RPC WSDLs - take 1</ant:echo>
		  <java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
			<classpath refid="maven.dependency.classpath"/>
				<arg line="-o target/rpc-test1 -uri test-resources/rpc/test-rpc-2.wsdl -uw"/>
		   </java>
		  <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/rpc-test1"
							 target="jar.client"/>
			  
			  <ant:echo>Running codegen RPC WSDLs - take 2</ant:echo>
		  <java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
			<classpath refid="maven.dependency.classpath"/>
				<arg line="-o target/rpc-test2 -uri test-resources/rpc/test-rpc-3.wsdl -uw"/>
		   </java>
		  <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/rpc-test2"
							 target="jar.client"/>
			  
		  
			  <ant:echo>Running codegen RPC WSDLs - take 3</ant:echo>
		  <java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
			<classpath refid="maven.dependency.classpath"/>
			<arg line="-o target/rpc-test3 -uri test-resources/rpc/test-rpc-2.wsdl -uw -d xmlbeans"/>
		   </java>
		  <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/rpc-test3"
							 target="jar.client"/>
			  
			   <ant:echo>Running codegen RPC WSDLs - take 4</ant:echo>
		  <java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
			<classpath refid="maven.dependency.classpath"/>
			<arg line="-o target/rpc-test4 -uri test-resources/rpc/test-rpc-2.wsdl -uw -d xmlbeans -ss -sd"/>
		   </java>
		  <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/rpc-test4"
							 target="jar.server"/>
	
			<ant:echo>Running codegen RPC WSDLs with helper mode -  take 1</ant:echo>
			<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
				<classpath refid="maven.dependency.classpath"/>
				<arg line="-o target/helper-test1 -uri test-resources/rpc/test-rpc-2.wsdl -u -Eh"/>
			</java>
			<ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/helper-test1"
					 target="jar.client"/>
	
			<ant:echo>Running codegen RPC WSDLs with helper mode -  take 2</ant:echo>
			<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
				<classpath refid="maven.dependency.classpath"/>
				<arg line="-o target/helper-test2 -uri test-resources/rpc/test-rpc-2.wsdl -u -Eh"/>
			</java>
			<ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/helper-test2"
					 target="jar.client"/>
	
			<j:if test="${context.getVariable('maven.test.skip') != 'true'}">
	
				<!-- codegen for the enterprise wsdl -->
				<ant:echo>Running codegen for Enterprise WSDL - take 1</ant:echo>
					<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
						<classpath refid="maven.dependency.classpath"/>
						<arg line="-d xmlbeans -o target/enterprise-test1 -s -uri test-resources/enterprise.wsdl"/>
					</java>
				 <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/enterprise-test1"
							 target="jar.client"/>
				<ant:echo>Running codegen for Enterprise WSDL - take 2</ant:echo>
					<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
						<classpath refid="maven.dependency.classpath"/>
						<arg line="-o target/enterprise-test2 -s -uri test-resources/enterprise.wsdl"/>
					</java>
				 <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/enterprise-test2"
							 target="jar.client"/>
			
				
				<ant:echo>Running codegen for Enterprise WSDL - take 3</ant:echo>
					<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
						<classpath refid="maven.dependency.classpath"/>
						<arg line="-d xmlbeans -ss -sd -g -o target/enterprise-test3 -s -uri test-resources/enterprise.wsdl"/>
					</java>
				 <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/enterprise-test3"
							 target="jar.server"/>
			
				<ant:echo>Running codegen for Enterprise WSDL - take 4</ant:echo>
					<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
						<classpath refid="maven.dependency.classpath"/>
						<arg line="-ns2p urn:sobject.enterprise.soap.sforce.com=com.salesforce -d xmlbeans -ss -sd -g -o target/enterprise-test4 -s -uri test-resources/enterprise.wsdl"/>
					</java>
				 <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/enterprise-test4"
							 target="jar.server"/>
				<ant:echo>Running codegen for eBaySvc WSDL</ant:echo>
					<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
						<classpath refid="maven.dependency.classpath"/>
						<arg line="-ss -sd -g -b -o target/eBaySvc -s -uri test-resources/eBaySvc.wsdl"/>
					</java>
				 <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/eBaySvc"
							 target="jar.server"/>
                <ant:echo>Running codegen for eBaySvc WSDL with un wrapping </ant:echo>
					<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
						<classpath refid="maven.dependency.classpath"/>
						<arg line="-ss -sd -g -b -o target/eBaySvcUW -s -t -uw -uri test-resources/eBaySvc.wsdl"/>
					</java>
				 <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="target/eBaySvcUW"
							 target="jar.server"/>
            </j:if>
        </j:if>
    </preGoal>

    <postGoal name="test:compile">
        <j:if test="${context.getVariable('maven.test.skip') != 'true'}">
		
			<!--Setting up service and client repos for org.apache.rampart.* tests -->
			<mkdir dir="target/temp-ramp"/>
			<mkdir dir="target/temp-ramp/META-INF"/>
			
			<copy overwrite="yes" file="target/test-classes/org/apache/rampart/Service.class"
                  tofile="target/temp-ramp/org/apache/rampart/Service.class"/>
			<copy overwrite="yes" file="target/test-classes/org/apache/rampart/PWCallback.class"
                  tofile="target/temp-ramp/org/apache/rampart/PWCallback.class"/>

			<copy overwrite="yes" file="test-resources/rampart/store.jks"
                  tofile="target/temp-ramp/store.jks"/>
			
		    <ant:path id="ramp.client.props" location="test-resources/rampart"/>
            <maven:addPath id="maven.dependency.classpath" refid="ramp.client.props"/>
			
			<mkdir dir="target/test-resources/rampart_client_repo"/>
            <mkdir dir="target/test-resources/rampart_client_repo/conf"/>
            <mkdir dir="target/test-resources/rampart_client_repo/modules"/>

            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/rampart_client_repo/modules/rampart-${rampart_module_version}.mar"/>
		    <copy file="../rahas/target/rahas-${rahas_module_version}.mar"
                  tofile="target/test-resources/rampart_client_repo/modules/rahas-${rahas_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/rampart_client_repo/modules/addressing-${addressing_version}.mar"/>

            <mkdir dir="target/test-resources/rampart_service_repo"/>
            <mkdir dir="target/test-resources/rampart_service_repo/conf"/>
            <mkdir dir="target/test-resources/rampart_service_repo/services"/>
            <mkdir dir="target/test-resources/rampart_service_repo/modules"/>

            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/rampart_service_repo/modules/rampart-${rampart_module_version}.mar"/>
		    <copy file="../rahas/target/rahas-${rahas_module_version}.mar"
                  tofile="target/test-resources/rampart_service_repo/modules/rahas-${rahas_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/rampart_service_repo/modules/addressing-${addressing_version}.mar"/>

		    <ant:path id="ramp.interop.test.classes" location="../security/target/interop/classes"/>
            <maven:addPath id="maven.dependency.classpath" refid="ramp.interop.test.classes"/>
        	
		    <!-- Service 1 -->
			<copy overwrite="yes" file="test-resources/rampart/services-1.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureService1.aar"
                 basedir="target/temp-ramp"/>

		    <!-- Service 2 -->
			<copy overwrite="yes" file="test-resources/rampart/services-2.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureService2.aar"
                 basedir="target/temp-ramp"/>

		    <!-- Service 3 -->
			<copy overwrite="yes" file="test-resources/rampart/services-3.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureService3.aar"
                 basedir="target/temp-ramp"/>

		    <!-- Service 4 -->
			<copy overwrite="yes" file="test-resources/rampart/services-4.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureService4.aar"
                 basedir="target/temp-ramp"/>

		    <!-- Service 5 -->
			<copy overwrite="yes" file="test-resources/rampart/services-5.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureService5.aar"
                 basedir="target/temp-ramp"/>

		    <!-- Service 6 -->
			<copy overwrite="yes" file="test-resources/rampart/services-6.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureService6.aar"
                 basedir="target/temp-ramp"/>

			<!-- Service 7 -->
			<copy overwrite="yes" file="test-resources/rampart/services-7.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureService7.aar"
                 basedir="target/temp-ramp"/>
				 
			<!-- Service 8 -->
			<copy overwrite="yes" file="test-resources/rampart/services-8.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureService8.aar"
                 basedir="target/temp-ramp"/>

			<!-- Service 9 -->
			<copy overwrite="yes" file="test-resources/rampart/services-9.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureService9.aar"
                 basedir="target/temp-ramp"/>

			<!-- Service SC-1 -->
			<copy overwrite="yes" file="test-resources/rampart/issuer.properties"
                  tofile="target/temp-ramp/issuer.properties"/>
				  
			<copy overwrite="yes" file="test-resources/rampart/services-sc-1.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureServiceSC1.aar"
                 basedir="target/temp-ramp"/>
				 
			<copy overwrite="yes" file="test-resources/rampart/issuer.properties"
                  tofile="target/temp-ramp/issuer.properties"/>
				  
			<copy overwrite="yes" file="test-resources/rampart/services-sc-2.xml"
                  tofile="target/temp-ramp/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/rampart_service_repo/services/SecureServiceSC2.aar"
                 basedir="target/temp-ramp"/>
				 
			<!-- Service classes for the SecConv tests -->
			<mkdir dir="target/temp-sc"/>
			<mkdir dir="target/temp-sc/META-INF"/>
			
			<copy overwrite="yes" file="target/test-classes/org/apache/axis2/security/sc/Service.class"
                  tofile="target/temp-sc/org/apache/axis2/security/sc/Service.class"/>
			<copy overwrite="yes" file="target/test-classes/org/apache/axis2/security/sc/PWCallback.class"
                  tofile="target/temp-sc/org/apache/axis2/security/sc/PWCallback.class"/>
				  
			<copy overwrite="yes" todir="target/temp-sc">
            	<fileset dir="test-resources/security/sc">
					<include name="sctIssuer.properties"/>
					<include name="sts.jks"/>
				</fileset>
			</copy>

			<ant:path id="sc.client.props" location="test-resources/security/sc"/>
            <maven:addPath id="maven.dependency.classpath" refid="sc.client.props"/>
			
			<mkdir dir="target/test-resources/sc_client_repo"/>
            <mkdir dir="target/test-resources/sc_client_repo/conf"/>
            <mkdir dir="target/test-resources/sc_client_repo/modules"/>
			
			<copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/sc_client_repo/modules/addressing-${addressing_version}.mar"/>
			<copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/sc_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- SecConv Test - 1  -->

            <mkdir dir="target/test-resources/sc_service_repo_1"/>
            <mkdir dir="target/test-resources/sc_service_repo_1/conf"/>
            <mkdir dir="target/test-resources/sc_service_repo_1/services"/>
            <mkdir dir="target/test-resources/sc_service_repo_1/modules"/>

	    
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/sc_service_repo_1/modules/rampart-${rampart_module_version}.mar"/>
		    <copy file="../rahas/target/rahas-${rahas_module_version}.mar"
                  tofile="target/test-resources/sc_service_repo_1/modules/rahas-${rahas_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/sc_service_repo_1/modules/addressing-${addressing_version}.mar"/>
				  
			<!-- copy the services.xml and create the aar -->
			<copy overwrite="yes" file="test-resources/security/sc/s1-services.xml"
                  tofile="target/temp-sc/META-INF/services.xml"/>

		    <jar jarfile="target/test-resources/sc_service_repo_1/services/SecureService.aar"
                 basedir="target/temp-sc"/>

            <!-- SecConv Test - 1 :END -->

            <!-- SecConv Test - 2  -->

            <mkdir dir="target/test-resources/sc_service_repo_2"/>
            <mkdir dir="target/test-resources/sc_service_repo_2/conf"/>
            <mkdir dir="target/test-resources/sc_service_repo_2/services"/>
            <mkdir dir="target/test-resources/sc_service_repo_2/modules"/>

            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/sc_service_repo_2/modules/rampart-${rampart_module_version}.mar"/>
		    <copy file="../rahas/target/rahas-${rahas_module_version}.mar"
                  tofile="target/test-resources/sc_service_repo_2/modules/rahas-${rahas_module_version}.mar"/>
		    <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/sc_service_repo_2/modules/addressing-${addressing_version}.mar"/>

			<!-- copy the services.xml and create the aar -->
			<copy overwrite="yes" file="test-resources/security/sc/s2-services.xml"
                  tofile="target/temp-sc/META-INF/services.xml"/>

		    <jar  overwrite="yes" jarfile="target/test-resources/sc_service_repo_2/services/SecureService.aar"
                 basedir="target/temp-sc"/>

            <!-- SecConv Test - 2 :END -->

			<!-- SecConv Test - 3  -->

            <mkdir dir="target/test-resources/sc_service_repo_3"/>
            <mkdir dir="target/test-resources/sc_service_repo_3/conf"/>
            <mkdir dir="target/test-resources/sc_service_repo_3/services"/>
            <mkdir dir="target/test-resources/sc_service_repo_3/modules"/>

            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/sc_service_repo_3/modules/rampart-${rampart_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/sc_service_repo_3/modules/addressing-${addressing_version}.mar"/>
			<!-- copy the services.xml and create the aar -->
			<copy overwrite="yes" file="test-resources/security/sc/s3-services.xml"
                  tofile="target/temp-sc/META-INF/services.xml"/>

		    <jar  overwrite="yes" jarfile="target/test-resources/sc_service_repo_3/services/SecureService.aar"
                 basedir="target/temp-sc"/>

            <!-- SecConv Test - 3 :END -->

			<!-- SecConv Test - 4  -->

            <mkdir dir="target/test-resources/sc_service_repo_4"/>
            <mkdir dir="target/test-resources/sc_service_repo_4/conf"/>
            <mkdir dir="target/test-resources/sc_service_repo_4/services"/>
            <mkdir dir="target/test-resources/sc_service_repo_4/modules"/>

            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/sc_service_repo_4/modules/rampart-${rampart_module_version}.mar"/>
		    <copy file="../rahas/target/rahas-${rahas_module_version}.mar"
                  tofile="target/test-resources/sc_service_repo_4/modules/rahas-${rahas_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/sc_service_repo_4/modules/addressing-${addressing_version}.mar"/>

			<!-- copy the services.xml and create the aar -->
			<copy overwrite="yes" file="test-resources/security/sc/s4-services.xml"
                  tofile="target/temp-sc/META-INF/services.xml"/>

		    <jar  overwrite="yes" jarfile="target/test-resources/sc_service_repo_4/services/SecureService.aar"
                 basedir="target/temp-sc"/>

            <!-- SecConv Test - 4 :END -->
			
			<!-- clean up temp sc stuff -->
			<delete dir="target/temp-sc"/>
			
			<!-- Set up the infra for rahas tests and the rahas client repo -->
			
			<mkdir dir="target/temp-rahas"/>
			<mkdir dir="target/temp-rahas/META-INF"/>
			
			<copy overwrite="yes" file="target/test-classes/org/apache/rahas/Service.class"
                  tofile="target/temp-rahas/org/apache/rahas/Service.class"/>
			<copy overwrite="yes" file="target/test-classes/org/apache/rahas/PWCallback.class"
                  tofile="target/temp-rahas/org/apache/rahas/PWCallback.class"/>
				  
			<copy overwrite="yes" todir="target/temp-rahas">
            	<fileset dir="test-resources/rahas">
					<include name="issuer.properties"/>
					<include name="rahas-sts.jks"/>
				</fileset>
			</copy>

			<ant:path id="rahas.client.props" location="test-resources/rahas"/>
            <maven:addPath id="maven.dependency.classpath" refid="rahas.client.props"/>
			
			<mkdir dir="target/test-resources/rahas_client_repo"/>
            <mkdir dir="target/test-resources/rahas_client_repo/conf"/>
            <mkdir dir="target/test-resources/rahas_client_repo/modules"/>
			
			<copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/rahas_client_repo/modules/addressing-${addressing_version}.mar"/>
			<copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/rahas_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copying the DOM3 stuff to the endorsed dir -->
            <mkdir dir="target/test-resources/endorsed"/>
            <j:if test="${context.getVariable('maven.jar.override').toString().trim().equalsIgnoreCase('on')}">
				<copy file="${dependencies.dir}/xercesImpl-${xerces.version}.jar"
					  todir="target/test-resources/endorsed"/>
				<copy file="${dependencies.dir}/xml-apis-${xml_apis.version}.jar"
					  todir="target/test-resources/endorsed"/>
            </j:if>
            <j:if test="${context.getVariable('maven.jar.override').toString().trim().equalsIgnoreCase('off')}">
				<copy file="${maven.repo.local}/xerces/jars/xercesImpl-${xerces.version}.jar"
					  todir="target/test-resources/endorsed"/>
				<copy file="${maven.repo.local}/xml-apis/jars/xml-apis-${xml_apis.version}.jar"
					  todir="target/test-resources/endorsed"/>
            </j:if>
			
			<!-- Rahas Test1: SAML Token test -->
            <mkdir dir="target/test-resources/rahas_service_repo_1"/>
            <mkdir dir="target/test-resources/rahas_service_repo_1/conf"/>
            <mkdir dir="target/test-resources/rahas_service_repo_1/services"/>
            <mkdir dir="target/test-resources/rahas_service_repo_1/modules"/>

            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/rahas_service_repo_1/modules/rampart-${rampart_module_version}.mar"/>
		    <copy file="../rahas/target/rahas-${rahas_module_version}.mar"
                  tofile="target/test-resources/rahas_service_repo_1/modules/rahas-${rahas_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/rahas_service_repo_1/modules/addressing-${addressing_version}.mar"/>
				  
				  
			<!-- copy the services.xml and create the aar -->
			<copy overwrite="yes" file="test-resources/rahas/s1-services.xml"
                  tofile="target/temp-rahas/META-INF/services.xml"/>

		    <jar  overwrite="yes" jarfile="target/test-resources/rahas_service_repo_1/services/SecureService.aar"
                 basedir="target/temp-rahas"/>

			<!-- Rahas Test1: SAML Token test : END -->


			<!-- Rahas Test 3 & 4: RahasSAMLTokenUTForHoKTest and RahasSAMLTokenUTForHoKV1205Test -->
            <mkdir dir="target/test-resources/rahas_service_repo_3"/>
            <mkdir dir="target/test-resources/rahas_service_repo_3/conf"/>
            <mkdir dir="target/test-resources/rahas_service_repo_3/services"/>
            <mkdir dir="target/test-resources/rahas_service_repo_3/modules"/>

            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/rahas_service_repo_3/modules/rampart-${rampart_module_version}.mar"/>
		    <copy file="../rahas/target/rahas-${rahas_module_version}.mar"
                  tofile="target/test-resources/rahas_service_repo_3/modules/rahas-${rahas_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/rahas_service_repo_3/modules/addressing-${addressing_version}.mar"/>
				  
				  
			<!-- copy the services.xml and create the aar -->
			<copy overwrite="yes" file="test-resources/rahas/s3-services.xml"
                  tofile="target/temp-rahas/META-INF/services.xml"/>

		    <jar  overwrite="yes" jarfile="target/test-resources/rahas_service_repo_3/services/SecureService.aar"
                 basedir="target/temp-rahas"/>

			<!-- Rahas Test 3 & 4: RahasSAMLTokenUTForHoKTest and RahasSAMLTokenUTForHoKV1205Test : END-->


			<mkdir dir="target/test-resources/samples/modules"/>
            <mkdir dir="target/test-resources/samples/conf"/>
            <mkdir dir="target/test-resources/repository-client/modules"/>
            <mkdir dir="target/test-resources/repository-client/conf"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/samples/modules/addressing-${addressing_version}.mar"/>
            <copy file="conf/axis2.xml"
                  tofile="target/test-resources/samples/conf/axis2.xml"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/repository-client/modules/addressing-${addressing_version}.mar"/>
            <copy file="conf/axis2.xml"
                  tofile="target/test-resources/repository-client/conf/axis2.xml"/>
            <mkdir dir="target/toWar/services/"/>

            <!-- Create Chunked enabled Repository -->
            <mkdir dir="target/test-resources/chunking-enabledRepository"/>
            <mkdir dir="target/test-resources/chunking-enabledRepository/conf"/>
            <copy file="test/org/apache/axis2/engine/chunking-enabled-axis2.xml"
                  tofile="target/test-resources/chunking-enabledRepository/conf/axis2.xml"/>

            <!-- Create Chunked disabled Repository -->
            <mkdir dir="target/test-resources/chunking-disabledRepository"/>
            <mkdir dir="target/test-resources/chunking-disabledRepository/conf"/>
            <copy file="test/org/apache/axis2/engine/chunking-disabled-axis2.xml"
                  tofile="target/test-resources/chunking-disabledRepository/conf/axis2.xml"/>

            <!-- Create JMS enabled Server Repository -->
            <mkdir dir="target/test-resources/jms-enabled-server-repository"/>
            <mkdir dir="target/test-resources/jms-enabled-server-repository/conf"/>
            <mkdir dir="target/test-resources/jms-enabled-server-repository/modules"/>
            <copy file="test/org/apache/axis2/jms/jms-enabled-server-axis2.xml"
                  tofile="target/test-resources/jms-enabled-server-repository/conf/axis2.xml"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/jms-enabled-server-repository/modules/addressing-${addressing_version}.mar"/>

            <!-- Create JMS enabled Client Repository -->
            <mkdir dir="target/test-resources/jms-enabled-client-repository"/>
            <mkdir dir="target/test-resources/jms-enabled-client-repository/conf"/>
            <mkdir dir="target/test-resources/jms-enabled-client-repository/modules"/>
            <copy file="test/org/apache/axis2/jms/jms-enabled-client-axis2.xml"
                  tofile="target/test-resources/jms-enabled-client-repository/conf/axis2.xml"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/jms-enabled-client-repository/modules/addressing-${addressing_version}.mar"/>

            <!-- Create Mail Client transport enabled Repository -->
            <mkdir dir="target/test-resources/mail-transport-client-enabledRepository"/>
            <mkdir dir="target/test-resources/mail-transport-client-enabledRepository/conf"/>
            <mkdir dir="target/test-resources/mail-transport-client-enabledRepository/modules"/>
            <copy file="test/org/apache/axis2/mail/mail-enabled-client-axis2.xml"
                  tofile="target/test-resources/mail-transport-client-enabledRepository/conf/axis2.xml"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/mail-transport-client-enabledRepository/modules/addressing-${addressing_version}.mar"/>

            <!-- Create Mail Server transport enabled Repository -->
            <mkdir dir="target/test-resources/mail-transport-server-enabledRepository"/>
            <mkdir dir="target/test-resources/mail-transport-server-enabledRepository/conf"/>
            <mkdir dir="target/test-resources/mail-transport-server-enabledRepository/modules"/>
            <copy file="test/org/apache/axis2/mail/mail-enabled-server-axis2.xml"
                  tofile="target/test-resources/mail-transport-server-enabledRepository/conf/axis2.xml"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/mail-transport-server-enabledRepository/modules/addressing-${addressing_version}.mar"/>

            <mkdir dir="target/test-resources/MessageContextInjectionRepo"/>
            <mkdir dir="target/test-resources/integrationRepo/modules"/>
            <mkdir dir="target/test-resources/integrationRepo/conf"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/integrationRepo/modules/addressing-${addressing_version}.mar"/>
            <copy file="conf/axis2.xml"
                  tofile="target/test-resources/integrationRepo/conf/axis2.xml"/>


            <!-- Commons transport enabled enabled Repository -->
            <mkdir dir="target/test-resources/commons-http-enabledRepository"/>
            <mkdir dir="target/test-resources/commons-http-enabledRepository/conf"/>
            <copy file="test/org/apache/axis2/engine/commons-http-enabled-axis2.xml"
                  tofile="target/test-resources/commons-http-enabledRepository/conf/axis2.xml"/>

           <!-- MTOM enabled Repository -->
            <mkdir dir="target/test-resources/MTOM-enabledRepository"/>
            <mkdir dir="target/test-resources/MTOM-enabledRepository/conf"/>
            <copy file="test-resources/mtom/MTOM-enabled-axis2.xml"
                  tofile="target/test-resources/MTOM-enabledRepository/conf/axis2.xml"/>
        	<copy file="../addressing/target/addressing-${addressing_version}.mar"
        	      tofile="target/test-resources/MTOM-enabledRepository/modules/addressing-${addressing_version}.mar"/>

            <!-- MTOM file cache enabled Repository -->
            <mkdir dir="target/test-resources/MTOM-fileCache-enabledRepository"/>
            <mkdir dir="target/test-resources/MTOM-fileCache-enabledRepository/conf"/>
            <copy file="test-resources/mtom/MTOM-fileCache-enabled-axis2.xml"
                  tofile="target/test-resources/MTOM-fileCache-enabledRepository/conf/axis2.xml"/>
        	<copy file="../addressing/target/addressing-${addressing_version}.mar"
        	        	      tofile="target/test-resources/MTOM-fileCache-enabledRepository/modules/addressing-${addressing_version}.mar"/>

            <!-- SwA enabled Repository -->
              <mkdir dir="target/test-resources/SwA-enabledRepository"/>
              <mkdir dir="target/test-resources/SwA-enabledRepository/conf"/>
              <copy file="test-resources/swa/SwA-enabled-axis2.xml"
                    tofile="target/test-resources/SwA-enabledRepository/conf/axis2.xml"/>
          	<copy file="../addressing/target/addressing-${addressing_version}.mar"
          	      tofile="target/test-resources/SwA-enabledRepository/modules/addressing-${addressing_version}.mar"/>

              <!-- SwA file cache enabled Repository -->
              <mkdir dir="target/test-resources/SwA-fileCache-enabledRepository"/>
              <mkdir dir="target/test-resources/SwA-fileCache-enabledRepository/conf"/>
              <copy file="test-resources/swa/SwA-fileCache-enabled-axis2.xml"
                    tofile="target/test-resources/SwA-fileCache-enabledRepository/conf/axis2.xml"/>
          	<copy file="../addressing/target/addressing-${addressing_version}.mar"
          	        	      tofile="target/test-resources/SwA-fileCache-enabledRepository/modules/addressing-${addressing_version}.mar"/>

            <!-- Groovy repository -->
            <mkdir dir="target/groovyRepo"/>
            <mkdir dir="target/groovyRepo/conf"/>
            <mkdir dir="target/groovyRepo/services"/>
            <mkdir dir="target/groovyRepo/modules"/>
            <ant:copy file="../samples/target/groovy/groovyService.aar"
                      tofile="target/groovyRepo/services/groovyService.aar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/groovyRepo/modules/addressing-${addressing_version}.mar"/>
            <copy file="conf/axis2.xml"
                  tofile="target/groovyRepo/conf/axis2.xml"/>

            <!-- Spring resources -->
            <mkdir dir="target/test-resources/spring"/>
            <copy file="../spring/test-resources/applicationContext.xml"
                  tofile="target/test-classes/spring/applicationContext.xml"/>

            <!--Axis2 repositories for WS-Security interop tests -->

            <!-- A default repository with security and addressing modules -->
            <mkdir dir="target/test-resources/default_security_client_repo"/>
            <mkdir dir="target/test-resources/default_security_client_repo/conf"/>
            <mkdir dir="target/test-resources/default_security_client_repo/modules"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/default_security_client_repo/modules/rampart-${rampart_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/default_security_client_repo/modules/addressing-${addressing_version}.mar"/>
            <copy file="conf/axis2.xml"
                  tofile="target/test-resources/default_security_client_repo/conf/axis2.xml"/>

            <!-- Scenario 1 -->
            <mkdir dir="target/test-resources/scenario1_client_repo"/>
            <mkdir dir="target/test-resources/scenario1_client_repo/conf"/>
            <mkdir dir="target/test-resources/scenario1_client_repo/modules"/>
            <mkdir dir="target/test-resources/scenario1_client_repo/services"/>

            <mkdir dir="target/test-resources/scenario1_service_repo"/>
            <mkdir dir="target/test-resources/scenario1_service_repo/conf"/>
            <mkdir dir="target/test-resources/scenario1_service_repo/services"/>
            <mkdir dir="target/test-resources/scenario1_service_repo/modules"/>

            <!-- setup scenario 1 client repository-->
            <copy file="test-resources/security/s1.client.axis2.xml"
                  tofile="target/test-resources/scenario1_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario1_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- This is to add the PWCallback in to the classpath for the client to pick
                 the password callback class.
            -->
            <ant:path id="sec.interop.service.jar" location="../security/target/PingPort.aar"/>
            <maven:addPath id="maven.dependency.classpath" refid="sec.interop.service.jar"/>

            <!-- setup scenario 1 service repository-->
            <copy file="test-resources/security/s1.service.axis2.xml"
                  tofile="target/test-resources/scenario1_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario1_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/s1.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/scenario1_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>

            <!-- Scenario 2 -->
            <mkdir dir="target/test-resources/scenario2_client_repo"/>
            <mkdir dir="target/test-resources/scenario2_client_repo/conf"/>
            <mkdir dir="target/test-resources/scenario2_client_repo/modules"/>

            <mkdir dir="target/test-resources/scenario2_service_repo"/>
            <mkdir dir="target/test-resources/scenario2_service_repo/conf"/>
            <mkdir dir="target/test-resources/scenario2_service_repo/services"/>
            <mkdir dir="target/test-resources/scenario2_service_repo/modules"/>

            <!-- setup scenario 2 client repository-->
            <copy file="test-resources/security/s2.client.axis2.xml"
                  tofile="target/test-resources/scenario2_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario2_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- setup scenario 2 service repository-->
            <copy file="test-resources/security/s2.service.axis2.xml"
                  tofile="target/test-resources/scenario2_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario2_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/s2.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/scenario2_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>

            <!-- Scenario 2a -->
            <mkdir dir="target/test-resources/scenario2a_client_repo"/>
            <mkdir dir="target/test-resources/scenario2a_client_repo/conf"/>
            <mkdir dir="target/test-resources/scenario2a_client_repo/modules"/>

            <mkdir dir="target/test-resources/scenario2a_service_repo"/>
            <mkdir dir="target/test-resources/scenario2a_service_repo/conf"/>
            <mkdir dir="target/test-resources/scenario2a_service_repo/services"/>
            <mkdir dir="target/test-resources/scenario2a_service_repo/modules"/>

            <!-- setup scenario 2a client repository-->
            <copy file="test-resources/security/s2a.client.axis2.xml"
                  tofile="target/test-resources/scenario2a_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario2a_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- setup scenario 2a service repository-->
            <copy file="test-resources/security/s2a.service.axis2.xml"
                  tofile="target/test-resources/scenario2a_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario2a_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/s2a.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/scenario2a_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>

            <!-- Scenario 3 -->
            <mkdir dir="target/test-resources/scenario3_client_repo"/>
            <mkdir dir="target/test-resources/scenario3_client_repo/conf"/>
            <mkdir dir="target/test-resources/scenario3_client_repo/modules"/>

            <mkdir dir="target/test-resources/scenario3_service_repo"/>
            <mkdir dir="target/test-resources/scenario3_service_repo/conf"/>
            <mkdir dir="target/test-resources/scenario3_service_repo/services"/>
            <mkdir dir="target/test-resources/scenario3_service_repo/modules"/>

            <!-- setup scenario 3 client repository-->
            <copy file="test-resources/security/s3.client.axis2.xml"
                  tofile="target/test-resources/scenario3_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario3_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- setup scenario 3 service repository-->
            <copy file="test-resources/security/s3.service.axis2.xml"
                  tofile="target/test-resources/scenario3_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario3_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/s3.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/scenario3_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>


            <!-- Scenario 4 -->
            <mkdir dir="target/test-resources/scenario4_client_repo"/>
            <mkdir dir="target/test-resources/scenario4_client_repo/conf"/>
            <mkdir dir="target/test-resources/scenario4_client_repo/modules"/>

            <mkdir dir="target/test-resources/scenario4_service_repo"/>
            <mkdir dir="target/test-resources/scenario4_service_repo/conf"/>
            <mkdir dir="target/test-resources/scenario4_service_repo/services"/>
            <mkdir dir="target/test-resources/scenario4_service_repo/modules"/>

            <!-- setup scenario 4 client repository-->
            <copy file="test-resources/security/s4.client.axis2.xml"
                  tofile="target/test-resources/scenario4_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario4_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- setup scenario 4 service repository-->
            <copy file="test-resources/security/s4.service.axis2.xml"
                  tofile="target/test-resources/scenario4_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario4_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/s4.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/scenario4_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>


            <!-- Scenario 5 -->
            <mkdir dir="target/test-resources/scenario5_client_repo"/>
            <mkdir dir="target/test-resources/scenario5_client_repo/conf"/>
            <mkdir dir="target/test-resources/scenario5_client_repo/modules"/>

            <mkdir dir="target/test-resources/scenario5_service_repo"/>
            <mkdir dir="target/test-resources/scenario5_service_repo/conf"/>
            <mkdir dir="target/test-resources/scenario5_service_repo/services"/>
            <mkdir dir="target/test-resources/scenario5_service_repo/modules"/>

            <!-- setup scenario 5 client repository-->
            <copy file="test-resources/security/s5.client.axis2.xml"
                  tofile="target/test-resources/scenario5_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario5_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- setup scenario 5 service repository-->
            <copy file="test-resources/security/s5.service.axis2.xml"
                  tofile="target/test-resources/scenario5_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario5_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/s5.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/scenario5_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>


            <!-- Scenario 6 -->
            <mkdir dir="target/test-resources/scenario6_client_repo"/>
            <mkdir dir="target/test-resources/scenario6_client_repo/conf"/>
            <mkdir dir="target/test-resources/scenario6_client_repo/modules"/>

            <mkdir dir="target/test-resources/scenario6_service_repo"/>
            <mkdir dir="target/test-resources/scenario6_service_repo/conf"/>
            <mkdir dir="target/test-resources/scenario6_service_repo/services"/>
            <mkdir dir="target/test-resources/scenario6_service_repo/modules"/>

            <!-- setup scenario 6 client repository-->
            <copy file="test-resources/security/s6.client.axis2.xml"
                  tofile="target/test-resources/scenario6_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario6_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- setup scenario 6 service repository-->
            <copy file="test-resources/security/s6.service.axis2.xml"
                  tofile="target/test-resources/scenario6_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario6_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/s6.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/scenario6_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>


            <!-- Scenario 7 -->
            <mkdir dir="target/test-resources/scenario7_client_repo"/>
            <mkdir dir="target/test-resources/scenario7_client_repo/conf"/>
            <mkdir dir="target/test-resources/scenario7_client_repo/modules"/>

            <mkdir dir="target/test-resources/scenario7_service_repo"/>
            <mkdir dir="target/test-resources/scenario7_service_repo/conf"/>
            <mkdir dir="target/test-resources/scenario7_service_repo/services"/>
            <mkdir dir="target/test-resources/scenario7_service_repo/modules"/>

            <!-- setup scenario 7 client repository-->
            <copy file="test-resources/security/s7.client.axis2.xml"
                  tofile="target/test-resources/scenario7_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario7_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- setup scenario 7 service repository-->
            <copy file="test-resources/security/s7.service.axis2.xml"
                  tofile="target/test-resources/scenario7_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenario7_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/s7.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/scenario7_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>

            <!-- Scenario ST1 -->
            <mkdir dir="target/test-resources/scenarioST1_client_repo"/>
            <mkdir dir="target/test-resources/scenarioST1_client_repo/conf"/>
            <mkdir dir="target/test-resources/scenarioST1_client_repo/modules"/>

            <mkdir dir="target/test-resources/scenarioST1_service_repo"/>
            <mkdir dir="target/test-resources/scenarioST1_service_repo/conf"/>
            <mkdir dir="target/test-resources/scenarioST1_service_repo/services"/>
            <mkdir dir="target/test-resources/scenarioST1_service_repo/modules"/>

            <!-- setup scenario ST1 client repository-->
            <copy file="test-resources/security/sST1.client.axis2.xml"
                  tofile="target/test-resources/scenarioST1_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenarioST1_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- setup scenario ST1 service repository-->
            <copy file="test-resources/security/sST1.service.axis2.xml"
                  tofile="target/test-resources/scenarioST1_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/scenarioST1_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/sST1.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/scenarioST1_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>


            <!-- MTOM Optimized Security Test -->
            <mkdir dir="target/test-resources/mtom_sec_client_repo"/>
            <mkdir dir="target/test-resources/mtom_sec_client_repo/conf"/>
            <mkdir dir="target/test-resources/mtom_sec_client_repo/modules"/>

            <mkdir dir="target/test-resources/mtom_sec_service_repo"/>
            <mkdir dir="target/test-resources/mtom_sec_service_repo/conf"/>
            <mkdir dir="target/test-resources/mtom_sec_service_repo/services"/>
            <mkdir dir="target/test-resources/mtom_sec_service_repo/modules"/>

            <!-- MTOM Optimized Security Test client repository-->
            <copy file="test-resources/security/secMtom.client.axis2.xml"
                  tofile="target/test-resources/mtom_sec_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/mtom_sec_client_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- MTOM Optimized Security Test service repository-->
            <copy file="test-resources/security/secMtom.service.axis2.xml"
                  tofile="target/test-resources/mtom_sec_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/mtom_sec_service_repo/modules/rampart-${rampart_module_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/secMtom.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/mtom_sec_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>


            <!-- Test with addressing and MTOM  -->
            <mkdir dir="target/test-resources/complete_client_repo"/>
            <mkdir dir="target/test-resources/complete_client_repo/conf"/>
            <mkdir dir="target/test-resources/complete_client_repo/modules"/>

            <mkdir dir="target/test-resources/complete_service_repo"/>
            <mkdir dir="target/test-resources/complete_service_repo/conf"/>
            <mkdir dir="target/test-resources/complete_service_repo/services"/>
            <mkdir dir="target/test-resources/complete_service_repo/modules"/>

            <!-- Test with target resolver  -->
            <mkdir dir="target/test-resources/deployment_repo"/>
            <mkdir dir="target/test-resources/deployment_repo/conf"/>
            <mkdir dir="target/test-resources/deployment_repo/services"/>
            <mkdir dir="target/test-resources/deployment_repo/modules"/>
                  	
            <copy file="test-resources/deployment/deployment.both.axis2.xml"
            	  tofile="target/test-resources/deployment_repo/conf/axis2.xml"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
            	  tofile="target/test-resources/deployment_repo/modules/addressing-${addressing_version}.mar"/>
        	
            <!-- Test with addressing and MTOM client repository-->
            <copy file="test-resources/security/complete.client.axis2.xml"
                  tofile="target/test-resources/complete_client_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/complete_client_repo/modules/rampart-${rampart_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/complete_client_repo/modules/addressing-${addressing_version}.mar"/>

            <!-- Test with addressing and MTOMservice repository-->
            <copy file="test-resources/security/complete.service.axis2.xml"
                  tofile="target/test-resources/complete_service_repo/conf/axis2.xml"/>
            <copy file="../security/target/rampart-${rampart_module_version}.mar"
                  tofile="target/test-resources/complete_service_repo/modules/rampart-${rampart_module_version}.mar"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/test-resources/complete_service_repo/modules/addressing-${addressing_version}.mar"/>

            <!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
            <copy file="test-resources/security/complete.service.xml"
                  tofile="../security/target/interop/classes/META-INF/services.xml"
                  overwrite="true"/>

            <!-- Create the .aar file -->
            <jar jarfile="target/test-resources/complete_service_repo/services/PingPort.aar"
                 basedir="../security/target/interop/classes"/>

            <!-- Standard repository -->
            <mkdir dir="target/Repository"/>
            <mkdir dir="target/Repository/conf"/>
            <mkdir dir="target/Repository/services"/>
            <mkdir dir="target/Repository/modules"/>
            <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/Repository/modules/addressing-${addressing_version}.mar"/>
            <copy file="conf/axis2.xml"
                  tofile="target/Repository/conf/axis2.xml"/>
           
           <mkdir dir="target/perf2/build/repo/conf"/>
           <mkdir dir="target/perf/build/repo/conf"/>

           <copy file="conf/axis2.xml"
                  tofile="target/perf2/build/repo/conf/axis2.xml"/>
           <copy file="conf/axis2.xml"
                  tofile="target/perf/build/repo/conf/axis2.xml"/>

           <mkdir dir="target/perf2/build/repo/modules"/>
                        <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/perf2/build/repo/modules/addressing-${addressing_version}.mar"/>

           <mkdir dir="target/perf/build/repo/modules"/>
                        <copy file="../addressing/target/addressing-${addressing_version}.mar"
                  tofile="target/perf/build/repo/modules/addressing-${addressing_version}.mar"/>

            <j:jelly xmlns="jelly:ant">
                <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true"
                         dir="test-resources/SOAP12Testing/SOAP12TestModuleB"/>
                <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true"
                         dir="test-resources/SOAP12Testing/SOAP12TestModuleC"/>
                <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true"
                         dir="test-resources/SOAP12Testing/SOAP12TestServiceB"/>
                <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true"
                         dir="test-resources/SOAP12Testing/SOAP12TestServiceC"/>
            </j:jelly>
        </j:if>
    </postGoal>
</project>
