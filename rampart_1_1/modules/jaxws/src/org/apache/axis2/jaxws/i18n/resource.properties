# Translation instructions.
# 1.  Each message line is of the form key=value.
#     Translate the value, DO NOT translate the key.
# 2.  The messages may contain arguments that will be filled in
#     by the runtime.  These are of the form: {0}, {1}, etc.
#     These must appear as is in the message, though the order
#     may be changed to support proper language syntax.
# 3.  If a single quote character is to appear in the resulting
#     message, it must appear in this file as two consecutive
#     single quote characters.
# 4.  Lines beginning with "#" (like this one) are comment lines
#     and may contain translation instructions.  They need not be
#     translated unless your translated file, rather than this file,
#     will serve as a base for other translators.

#############################################################################
# DO NOT TOUCH THESE PROPERTIES - THEY ARE AUTOMATICALLY UPDATED BY THE BUILD
# PROCESS.
axisVersion=Apache Axis2 version: #axisVersion#
axisVersionRaw=#axisVersion#
axisBuiltOnRaw=#today#
axisUserAgent=Axis/#axisVersion#
builtOn=Built on #today#
#############################################################################
test01=This is a test string 01
faultProcessingNotSupported=User Fault Procecessing is not supported.  The exception is: {0}
exceptionDuringExceptionFlow=Exception occurred during exception processing.  The exception is swallowed.
serviceClientCreateError=An error occurred while creating the ServiceClient.
cannotSetExcutorToNull=An attempt was made to set the Executor to null.  This is not allowed.
getPortInvalidSEI=An attempt was made to call getPort with port {0} and SEI {1}.  This is not allowed.
createDispatchFail0=Dispatch creation failed.  Port QName cannot be null.
createDispatchFail1=Dispatch creation failed.  Port {0} was not found.  Make sure the port has been added to the Service.
createDispatchFail2=Dispatch creation failed.  Could not find PortData for Port {0}.
addPortDup=An attempt was made to add port {0} to the ServiceDelegate. The port already exists.
addPortErr0=Only SOAP11HTTP_BINDING and SOAP12HTTP_BINDING are supported at this time.  Port {0} is cannot be added to the ServiceDelegate.
# The key addPortErr1 is not currently used
# addPortErr1=An attempt was made to add port {0} with invalid endpoint address {1} to the ServiceDelegate. This is not allowed.
addPortErr2=An attempt was made to add a port with no name to the ServiceDelegate. This is not allowed.
serviceDelegateConstruct0=An attempt was made to construct the ServiceDelegate with invalid service name, {0}.
serviceDelegateConstruct1=An attempt was made to construct the ServiceDelegate with service {0}, but the service is not defined in the wsdl {1}.
serviceDescErr0=Invalid Service class.  The service QName cannot be null.
serviceDescErr1=Invalid Service class.  The Service class {0} must be assignable to javax.xml.ws.Service.
serviceDescErr2=Invalid Service.  The service QName {0} was not found in the wsdl.
wsdlException=Caught WSDL Exception: {0}
noWebResultForProperty=Could not create WebResult Object for property {0} of java bean {1}
portInfoErr0=Cannot construct port data.  The service name is invalid: {0}
portInfoErr1=Cannot construct port data.  The port name is invalid: {0}
portInfoErr2=Cannot construct port data.  The binding id is invalid: {0}
# The key portInfoErr3 is not currently used
# portInfoErr3=Cannot construct port data.  The service endpoint is invalid: {0}
warnAxisFault=Caught AxisFault.  Processing continues.  AxisFault = {0}
handlerChainErr0=Internal error.  Logical handler {0} occurs after the protocol handlers.
handlerChainErr1=Handler {0} should not directly implement javax.xml.ws.handler.Handler.
handlerChainErr2=Handler {0} must implement javax.xml.ws.handler.LogicalHandler or javax.xml.ws.handler.soap.SOAPHandler.
ICErr1=Internal Error. Invocation Context is null.
ICErr2=Internal Error. Message Context is null.
ICErr3=Internal Error. Request Message Context is null.
ICErr4=Cannot call asynchronous invoke with a null callback.
AsyncPollingNotSupported=Aysnchronous polling invocations are not supported yet.
ICCreateOpClientErr1=Cannot create OperationClient.  ServiceClient is null.
ICCreateOpClientErr2=Cannot create OperationClient.  Operation qname is null.
proxyErr1=An attempt was made to invoke method {0}, but this method is not available on the javax.xml.ws.BindingProvider or {1} class.
JAXWSMessageReceiverNoServiceClass=No service class was found for this AxisService.
EndpointControllerErr2=No Service class is configured for this endpoint.  Processing cannot continue.
EndpointControllerErr4=Error loading the provider implementation class {0}.  Processing cannot continue.
BlockImplErr1=Internal Error.  The block for {0} is already consumed.  Processing cannot continue.
XMLPartImplErr1=Internal Error.  The XML part is already consumed.  Processing cannot continue.
XMLPartImplErr2=Internal Error.  The content of the XML part cannot be determined.
RESTIsNotSupported=The REST protocol is not supported yet.
ProtocolIsNotKnown=The protocol has not been set.  This may indicate an internal error in the JAX-WS layer.
SourceNotSupported=The class {0} is not a supported extension of javax.xml.transform.Source.
SourceMissingSupport=Internal Error.  The code to make a copy of this javax.xml.transform.Source ({0}) is not supported yet.
MethodNotImplemented=Internal Error. Method {0} is not implemented yet.
dispatchInvokeErr1=Dispatch.invokeOneWay is called with a null Object argument.
dispatchInvokeErr2=Dispatch.invokeAsync is called with a null Object argument.
resetReaderErr=Internal Error. Cannot reset a non-resettable XMLStreamReader.
SAAJConverterErr1=The SOAPElement parent passed to the method toSAAJ is not attached to a SOAPEnvelope.  Processing cannot continue.
SAAJConverterErr2=An unexpected XMLStreamReader event {0} occurred while converting an OM to a SOAPElement.
XMLSRErr1=The method, getProperty(), was called with a null key argument.
XMLSRErr2=There are no more events.
XMLSRErr3=The require() method failed.  Expected {0} but found {1}.
XMLSRErr4=Failure occured in method {0}.
XMLSRErr5=The following {0} event is not supported in a SOAP Message
InvalidProvider=Invalid Provider implementation {0}. Only String, Source, and SOAPMessage are supported by JAX-WS
InvalidProviderCreate=Failure creating provider instance {0}. 
SOAPFaultIsNotImplemented=Internal Error. SOAPFault processing is not implemented.
NeverCalled=Internal Assertion Error.  Method {0} should never be called.
JAXBWrapperErr1=Internal Assertion Error. JAXB object argument to unwrap() is null.
JAXBWrapperErr2=Internal Assertion Error. Child names argument to unwrap() is null.
JAXBWrapperErr3=Internal Assertion Error. Child objects or child names argument to wrap() is null.
JAXBWrapperErr4=Internal Assertion Error. Number of child objects does not match the number of child names in wrap() method.
JAXBWrapperErr5=Internal Assertion Error. Number of child names does not match the number of bean properties in JAXB class {0}.
JAXBWrapperErr6=Internal Assertion Error. JAXB object {0} does not have a bean property named {1}.
JAXBSourceNamespaceErr=The DOMSource must be Namespace Aware.
AttachmentsNotSupported=SAAJ Attachments are not supported yet.
protoNotFound00=An associated Protocol was not found for the binding {0}.
JavaDispErr1=No service implementation class was found.
JavaDispErr2=Unable to load service implementation class {0}.
InvalidWebParams=Invalid webParams found, Number of webparams defined does not match the input method parameters.
AsyncListenerErr1=AxisCallback Object cannot be null, Internal error.
DocLitProxyHandlerErr1=As per WS-I compliance, Multi part WSDL not allowed for Doc/Lit NON Wrapped request, Method invoked has multiple input parameter.
DocLitProxyHandlerErr2 = Method Input parameter for NON Wrapped Request cannot be null.
SOAP12WithSAAJ12Err=A SOAP 1.2 Message cannot be rendered in an SAAJ 1.2 Object Model.